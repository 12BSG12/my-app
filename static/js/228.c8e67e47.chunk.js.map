{"version":3,"file":"static/js/228.c8e67e47.chunk.js","mappings":"uMACA,GAAgB,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oBAAoB,WAAa,0BAA0B,SAAW,wBAAwB,OAAS,sBAAsB,iBAAmB,iC,gDCIvOA,GAAQC,EAAAA,EAAAA,GAAQ,SAoCtB,GAHuBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,SADeD,EA/BL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAChC,OACE,iBAAMC,SAAUF,EAAhB,UACE,gBAAIG,UAAWC,EAAAA,OAAf,WACE,yBACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,kBAAOC,QAAQ,OAAf,qBACA,SAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAWb,EAAOc,SAAU,CAACC,EAAAA,WAGlE,yBACE,iBAAKR,UAAWC,EAAAA,KAAhB,WACE,kBAAOC,QAAQ,WAAf,uBACA,SAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,KAAK,WAAWC,UAAWb,EAAOc,SAAU,CAACC,EAAAA,UAGvEV,IAAS,eAAIE,UAAWC,EAAAA,iBAAf,SAAwCH,KAClD,yBACE,iBAAKE,UAAWC,EAAAA,WAAhB,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,SAACE,EAAA,EAAD,CAAOE,KAAK,WAAWD,KAAK,aAAaE,UAAU,WACnD,2CAEF,mBAAQD,KAAK,SAAb,8BAMX,I,8BC7BKI,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAGH,OAHGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJV,SAAW,SAACW,GACV,EAAKC,MAAMC,kBAAkBF,EAASG,MAAOH,EAASI,SAAUJ,EAASK,WAC1E,IAcA,OAdA,8BACD,WACE,OAAGC,KAAKL,MAAMM,QAAe,SAAC,KAAD,CAAUC,GAAG,cAExC,iBAAKlB,UAAWC,EAAAA,UAAhB,WACE,gBAAID,UAAWC,EAAAA,QAAf,WACE,eAAID,UAAWC,EAAAA,OAAf,sBACA,wCAEF,gBAAKD,UAAWC,EAAAA,YAAhB,UACE,SAAC,EAAD,CAAgBF,SAAUiB,KAAKjB,eAItC,OAjBGU,CAAcU,EAAAA,WAwBpB,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAW,CACjCJ,OAAQI,EAAMC,KAAKL,OADG,GAIgB,CAACL,kBAAAA,EAAAA,IAAzC,CAA6DH,E,+EC9B7D,EAAwB,2BAAxB,EAA+D,+B,4BCClDf,EAAU,SAACA,GAAD,OAAa,YAA6B,IAA3B6B,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAQb,GAAW,YACxDc,EAAWD,EAAKE,SAAWF,EAAK1B,MACtC,OACE,iCACE,SAAC,GAAD,gBAASE,UAAY,IAAMyB,EAAWxB,EAAc,KAASsB,GAAWZ,IACvEc,IAAY,gBAAKzB,UAAWC,EAAhB,SAAkCuB,EAAK1B,UAGzD,CARsB,C,8ECFhB,IAAMU,EAAW,SAAAmB,GACtB,IAAGA,EACH,MAAO,mBACR,EACYC,EAAY,SAACC,GAAD,OAAS,SAAAF,GAChC,GAAGA,EAAMG,OAASD,EAAM,MAAM,cAAN,OAAqBA,EAArB,cAEzB,CAHwB,C","sources":["webpack://my-app/./src/components/auth/login.module.css?77ea","components/auth/loginForm.jsx","components/auth/login.jsx","webpack://my-app/./src/components/common/FormControls/FormControl.module.css?c6f9","components/common/FormControls/FormControls.jsx","util/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"login_formBlock__reBjy\",\"formNav\":\"login_formNav__8MuJ6\",\"item\":\"login_item__eMHbL\",\"formBottom\":\"login_formBottom__+Sg1Z\",\"checkbox\":\"login_checkbox__ietwy\",\"active\":\"login_active__TS7w2\",\"formSummaryError\":\"login_formSummaryError__Ojhvy\"};","import style from './login.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Element} from '../common/FormControls/FormControls'\r\nimport {required} from '../../util/validators/validators'\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <ul className={style.formUl}>\r\n        <li>\r\n          <div className={style.item}>\r\n            <label htmlFor=\"name\">E-Mail</label>\r\n            <Field name=\"email\" type=\"email\" component={Input} validate={[required]}/>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className={style.item}>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Field name=\"password\" type=\"password\" component={Input} validate={[required]}/>\r\n          </div>\r\n        </li>\r\n        {error && <li className={style.formSummaryError}>{error}</li>}\r\n        <li>\r\n          <div className={style.formBottom}>\r\n            <div className={style.checkbox}>\r\n              <Field type=\"checkbox\" name=\"rememberMe\" component=\"input\"/>\r\n              <p>remember me</p>\r\n            </div>\r\n            <button type=\"submit\">Sign in</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n  );\r\n} \r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\nexport default LoginReduxForm;","import { Component } from 'react';\r\nimport style from './login.module.css'\r\nimport LoginReduxForm from './loginForm';\r\nimport { connect } from 'react-redux'\r\nimport { loginThunkCreator } from '../../redux/auth-reducer';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  onSubmit = (formData) => {\r\n    this.props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  render(){\r\n    if(this.props.isAuth) return <Navigate to='/profile'/>\r\n    return (\r\n      <div className={style.formBlock}>\r\n        <ul className={style.formNav}>\r\n          <li className={style.active}>Sign In</li>\r\n          <li>Sign Up</li>\r\n        </ul>\r\n        <div className={style.formUlBlock}>\r\n          <LoginReduxForm onSubmit={this.onSubmit}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nconst mapStateToProps = (state) =>({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControl_error__4Y94v\",\"errorText\":\"FormControl_errorText__E2s0Q\"};","import style from './FormControl.module.css';\r\n\r\nexport const Element = (Element) => ({input, meta,...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return(\r\n    <>\r\n      <Element className={ '' + (hasError ? style.error : \"\")} {...input} {...props}/>\r\n      {hasError && <div className={style.errorText}>{meta.error}</div>}\r\n    </>\r\n  )\r\n}","export const required = value => {\r\n  if(value) return undefined;\r\n  return 'Field is required';\r\n}\r\nexport const maxLength = (max) => value => {\r\n  if(value.length > max)  return `max length ${max} is symbols`;\r\n  return undefined;\r\n}"],"names":["Input","Element","reduxForm","form","handleSubmit","error","onSubmit","className","style","htmlFor","Field","name","type","component","validate","required","Login","formData","props","loginThunkCreator","email","password","rememberMe","this","isAuth","to","Component","connect","state","auth","input","meta","hasError","touched","value","maxLength","max","length"],"sourceRoot":""}